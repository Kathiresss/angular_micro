# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    # using Ubuntu
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "14.x"
      - uses: actions/cache@v3 # this allows for re-using node_modules caching, making builds a bit faster.
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: NPM Install
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PUBLISH_PACKAGE_SECRET }}
      - name: NPM Build Development
        run: npm run build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PUBLISH_PACKAGE_SECRET }}
      - name: Deploy to my EC2 instance
        uses: easingthemes/ssh-deploy@v2.1.5
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY}}
          SOURCE: "dist/appspos-erp-requisition/"
          REMOTE_HOST: "13.126.196.120"
          REMOTE_USER: "ec2-user"
          TARGET: "/home/ec2-user/workspace/appspos-erp/${{github.ref_name}}/requisition/"
